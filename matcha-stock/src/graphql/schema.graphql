type Brand {
  id: ID!
  name: String!
  website: String!
  createdAt: String!
  updatedAt: String!
  products: [Product!]!
  notifications: [BrandNotification!]!
}

type Product {
  id: ID!
  name: String!
  weight: String
  price: Float
  imageUrl: String
  url: String!
  brand: Brand!
  createdAt: String!
  updatedAt: String!
  inStock: Boolean!
  lastChecked: String
}

type User {
  id: ID!
  phone: String
  email: String
  createdAt: String!
  updatedAt: String!
  brandNotifications: [BrandNotification!]!
}

type BrandNotification {
  id: ID!
  user: User!
  brand: Brand!
  active: Boolean!
  createdAt: String!
  updatedAt: String!
}

type Notification {
  id: ID!
  userId: ID!
  productId: ID!
  active: Boolean!
  createdAt: String!
  updatedAt: String!
}

type StockHistory {
  id: ID!
  product: Product!
  inStock: Boolean!
  checkedAt: String!
}

type Query {
  brands: [Brand!]!
  brand(id: ID!): Brand
  products(brandId: ID): [Product!]!
  product(id: ID!): Product
  inStockProducts: [Product!]!
  outOfStockProducts: [Product!]!
  user(id: ID!): User
  userByEmail(email: String!): User
}

type Mutation {
  registerUser(phone: String, email: String): User!
  createBrandNotification(userId: ID!, brandId: ID!): BrandNotification!
  deleteBrandNotification(id: ID!): Boolean!
  createNotification(userId: ID!, productId: ID!): Notification!
  deleteNotification(id: ID!): Boolean!
  updateStockStatus(productId: ID!, inStock: Boolean!): Product!
}

type Subscription {
  productInStock(productId: ID!): Product!
} 